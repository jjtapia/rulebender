package rulebender;

import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.ui.application.IWorkbenchConfigurer;
import org.eclipse.ui.application.IWorkbenchWindowConfigurer;
import org.eclipse.ui.application.WorkbenchAdvisor;
import org.eclipse.ui.application.WorkbenchWindowAdvisor;

/**
 * Another class that is generated by eclipse and necessary to interact
 * with the Rich Client Platform.  This class specifically helps setup
 * the workbench.   
 * 
 * In this class I have added the PERSPECTIVE_ID that represents the main 
 * modeling perspective (rulebender.perspective (I know this is not descriptive, 
 * but changing it is not a proirity and I cannot remember all of the places 
 * where this label is used)).
 * 
 * Also, the getDefaultPageInput method has been changed to return the root 
 * directory for the ResourcesPlugin, which helps with initializing the 
 * CommonNavigatorFramework (The file browser).
 * 
 * The initialize method contains the necessary registerAdapters method call 
 * (I forget what it does exactly, but it is necessary) and also interacts with
 * the IWorkbenchConfigurer in order to set the view save/restore feature as on 
 * or off.
 */
public class ApplicationWorkbenchAdvisor extends WorkbenchAdvisor {

	private static final String PERSPECTIVE_ID = "rulebender.perspective";

	public WorkbenchWindowAdvisor createWorkbenchWindowAdvisor(
			IWorkbenchWindowConfigurer configurer) {
		return new ApplicationWorkbenchWindowAdvisor(configurer);
	}

	public String getInitialWindowPerspectiveId() {
		return PERSPECTIVE_ID;
	}
	
	
	//To get the resource workspace as input, override this method:
	// For common navigator framework
	public IAdaptable getDefaultPageInput() 
	{	System.out.println("Root name: " + ResourcesPlugin.getWorkspace().getRoot().getName());
		return ResourcesPlugin.getWorkspace().getRoot(); 
	}
	
	//To get the correct adapters hooked up add this code to the initialize() method:
	// For common navigator framework
	public void initialize(IWorkbenchConfigurer configurer) 
	{
		System.out.println("Registering Adapters");
		org.eclipse.ui.ide.IDE.registerAdapters();
		
		// This line
		configurer.setSaveAndRestore(true);
	}	
}
